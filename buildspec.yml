version: 0.2

env:
  secrets-manager:
    OWNER: $SECRET_ARN:OWNER
    AWS_REGION: $SECRET_ARN:AWS_REGION
    PROJECT_NAME: $SECRET_ARN:PROJECT_NAME
    API_PORT: $SECRET_ARN:API_PORT
    DB_DATABASE: $SECRET_ARN:DB_DATABASE
    DB_HOST: $SECRET_ARN:DB_HOST
    DB_PASSWORD: $SECRET_ARN:DB_PASSWORD
    DB_PORT: $SECRET_ARN:DB_PORT
    DB_USER: $SECRET_ARN:DB_USER
phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $OWNER.dkr.ecr.$AWS_REGION.amazonaws.com
      - echo Setting variables dockerfile...
      - sed -i "s/API_PORT_VALUE/$API_PORT/g" Dockerfile
      - sed -i "s/DB_DATABASE_VALUE/$DB_DATABASE/g" Dockerfile
      - sed -i "s/DB_HOST_VALUE/$DB_HOST/g" Dockerfile
      - sed -i "s/DB_PORT_VALUE/$DB_PORT/g" Dockerfile
      - sed -i "s/DB_USER_VALUE/$DB_USER/g" Dockerfile
      - sed -i "s/DB_PASSWORD_VALUE/$DB_PASSWORD/g" Dockerfile
  build:
      commands:
        - echo Build image `date`...
        - docker build -t $PROJECT_NAME:DEV .
        - docker tag $PROJECT_NAME:DEV $OWNER.dkr.ecr.$AWS_REGION.amazonaws.com/$PROJECT_NAME:DEV
  post_build:
      commands:
        - echo Pushing the Docker image `date`...
        - docker push $OWNER.dkr.ecr.$AWS_REGION.amazonaws.com/$PROJECT_NAME:DEV
        - echo Finish build `date`...
artifacts:
  files:
    - appspec.yml
    - scripts/**/*
